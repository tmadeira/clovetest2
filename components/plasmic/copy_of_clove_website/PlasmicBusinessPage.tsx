// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: eV7Xi9hgseajGR8GcVFgnT
// Component: kalnIZLqj6K81
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Page from "../../Page"; // plasmic-import: sCBjEr90b1mbPB/component
import Section from "../../Section"; // plasmic-import: iMtv5NCElk1PK/component
import Landing from "../../Landing"; // plasmic-import: Q7JAreKlD_imW/component
import StartedButton from "../../StartedButton"; // plasmic-import: hGvVhufbV8OeD/component
import CheckmarkText from "../../CheckmarkText"; // plasmic-import: UP0pQhrQy0dXu/component
import ImpactSection from "../../ImpactSection"; // plasmic-import: tmt8YJ3U6WhwTS/component
import ContactCard from "../../ContactCard"; // plasmic-import: DzjLF3G6lYSWQc/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: -L1czsd8IbhiAH/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_copy_of_clove_website.module.css"; // plasmic-import: eV7Xi9hgseajGR8GcVFgnT/projectcss
import * as sty from "./PlasmicBusinessPage.module.css"; // plasmic-import: kalnIZLqj6K81/css

export type PlasmicBusinessPage__VariantMembers = {};

export type PlasmicBusinessPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicBusinessPage__VariantsArgs;
export const PlasmicBusinessPage__VariantProps = new Array<VariantPropType>();

export type PlasmicBusinessPage__ArgsType = {};
type ArgPropType = keyof PlasmicBusinessPage__ArgsType;
export const PlasmicBusinessPage__ArgProps = new Array<ArgPropType>();

export type PlasmicBusinessPage__OverridesType = {
  root?: p.Flex<"div">;
  page?: p.Flex<typeof Page>;
  landing?: p.Flex<typeof Landing>;
  startedButton?: p.Flex<typeof StartedButton>;
  columns?: p.Flex<"div">;
  img?: p.Flex<"img">;
  impactSection?: p.Flex<typeof ImpactSection>;
  contactCard?: p.Flex<typeof ContactCard>;
};

export interface DefaultBusinessPageProps {
  dataFetches: PlasmicBusinessPage__Fetches;
}

function PlasmicBusinessPage__RenderFunc(props: {
  variants: PlasmicBusinessPage__VariantsArgs;
  args: PlasmicBusinessPage__ArgsType;
  overrides: PlasmicBusinessPage__OverridesType;
  dataFetches?: PlasmicBusinessPage__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{"Clove for Business"}</title>
        <meta
          key="og:title"
          property="og:title"
          content={"Clove for Business"}
        />
        <meta
          key="description"
          name="description"
          property="og:description"
          content={"Clove is a nonprofit helping you find sustainable products"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <Page
            data-plasmic-name={"page"}
            data-plasmic-override={overrides.page}
            businessPage={"businessPage" as const}
            className={classNames("__wab_instance", sty.page)}
            content={
              <React.Fragment>
                <div className={classNames(defaultcss.all, sty.box___87Iwa)}>
                  <Section
                    content={
                      <Landing
                        data-plasmic-name={"landing"}
                        data-plasmic-override={overrides.landing}
                        action={
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box___0Ralf
                            )}
                          >
                            {
                              "Lead the world to carbon neutrality with your brand. "
                            }
                          </div>
                        }
                        bottomAction={
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.box__beFp
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__oXbqq
                              )}
                            >
                              {"Join the Clove movement."}
                            </div>

                            <StartedButton
                              data-plasmic-name={"startedButton"}
                              data-plasmic-override={overrides.startedButton}
                              className={classNames(
                                "__wab_instance",
                                sty.startedButton
                              )}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__biNvy
                                )}
                              >
                                {"GET ASSESSED"}
                              </div>
                            </StartedButton>
                          </p.Stack>
                        }
                        className={classNames("__wab_instance", sty.landing)}
                      />
                    }
                  />
                </div>

                <div className={classNames(defaultcss.all, sty.box__o1BCs)}>
                  <Section
                    className={classNames("__wab_instance", sty.section__fmPW)}
                    content={
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__vvDhc)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"columns"}
                          data-plasmic-override={overrides.columns}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.columns)}
                        >
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.column___6Mxdo
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                sty.box__mhYpi
                              )}
                            >
                              <div
                                className={classNames(
                                  defaultcss.all,
                                  defaultcss.__wab_text,
                                  sty.box__f32U
                                )}
                              >
                                {"Why Join Clove?"}
                              </div>

                              <CheckmarkText
                                className={classNames(
                                  "__wab_instance",
                                  sty.checkmarkText__o2LN7
                                )}
                              >
                                <div
                                  className={classNames(
                                    defaultcss.all,
                                    defaultcss.__wab_text,
                                    sty.box__qIjLd
                                  )}
                                >
                                  {"Reduce your environmental impacts"}
                                </div>
                              </CheckmarkText>

                              <CheckmarkText
                                className={classNames(
                                  "__wab_instance",
                                  sty.checkmarkText__xKTn
                                )}
                              >
                                <div
                                  className={classNames(
                                    defaultcss.all,
                                    defaultcss.__wab_text,
                                    sty.box__mblVy
                                  )}
                                >
                                  {"Build trust with your customers"}
                                </div>
                              </CheckmarkText>

                              <CheckmarkText
                                className={classNames(
                                  "__wab_instance",
                                  sty.checkmarkText__s56Aa
                                )}
                              >
                                <div
                                  className={classNames(
                                    defaultcss.all,
                                    defaultcss.__wab_text,
                                    sty.box__jGlBx
                                  )}
                                >
                                  {"Simple integration into your store"}
                                </div>
                              </CheckmarkText>

                              <CheckmarkText
                                className={classNames(
                                  "__wab_instance",
                                  sty.checkmarkText__iIwc1
                                )}
                              >
                                <div
                                  className={classNames(
                                    defaultcss.all,
                                    defaultcss.__wab_text,
                                    sty.box__r4Vqa
                                  )}
                                >
                                  {"Reliable & transparent assessment results"}
                                </div>
                              </CheckmarkText>

                              <CheckmarkText
                                className={classNames(
                                  "__wab_instance",
                                  sty.checkmarkText__ajIRs
                                )}
                              >
                                <div
                                  className={classNames(
                                    defaultcss.all,
                                    defaultcss.__wab_text,
                                    sty.box__lxJrM
                                  )}
                                >
                                  {"It’s free!"}
                                </div>
                              </CheckmarkText>
                            </div>
                          </div>

                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.column__uG4Ad
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                sty.box___8VgL0
                              )}
                            >
                              <img
                                data-plasmic-name={"img"}
                                data-plasmic-override={overrides.img}
                                alt={""}
                                className={classNames(defaultcss.img, sty.img)}
                                role={"img"}
                                src={
                                  "/plasmic/copy_of_clove_website/images/screenShot20210701At102506AMpng.png"
                                }
                              />
                            </div>
                          </div>
                        </p.Stack>
                      </p.Stack>
                    }
                  />
                </div>

                <div className={classNames(defaultcss.all, sty.box__qIKoL)}>
                  <Section
                    className={classNames("__wab_instance", sty.section__sNCa)}
                    content={
                      <ImpactSection
                        data-plasmic-name={"impactSection"}
                        data-plasmic-override={overrides.impactSection}
                        className={classNames(
                          "__wab_instance",
                          sty.impactSection
                        )}
                        mobile={
                          hasVariant(globalVariants, "screen", "desktop")
                            ? undefined
                            : ("mobile" as const)
                        }
                        slot={
                          <div
                            className={classNames(
                              defaultcss.all,
                              defaultcss.__wab_text,
                              sty.box__gYTj
                            )}
                          >
                            {
                              "Our assessment allows you to understand and reduce your environmental impacts. Simultaneously, our label lets your customers purchase sustainably. It's a win-win!"
                            }
                          </div>
                        }
                      >
                        {"Our Impact"}
                      </ImpactSection>
                    }
                  />
                </div>

                <Section
                  className={classNames("__wab_instance", sty.section__k76Ij)}
                  content={
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box__wWyUi)}
                    >
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box___2TRp6
                        )}
                        id={"go" as const}
                      >
                        {"Join our waitlist"}
                      </div>

                      <ContactCard
                        data-plasmic-name={"contactCard"}
                        data-plasmic-override={overrides.contactCard}
                        className={classNames(
                          "__wab_instance",
                          sty.contactCard
                        )}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__aEi5J
                          )}
                        >
                          {
                            "Our pilot program is full but you can sign up below on our waitlist and we'll be in touch"
                          }
                        </div>
                      </ContactCard>
                    </p.Stack>
                  }
                />
              </React.Fragment>
            }
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "page",
    "landing",
    "startedButton",
    "columns",
    "img",
    "impactSection",
    "contactCard"
  ],
  page: [
    "page",
    "landing",
    "startedButton",
    "columns",
    "img",
    "impactSection",
    "contactCard"
  ],
  landing: ["landing", "startedButton"],
  startedButton: ["startedButton"],
  columns: ["columns", "img"],
  img: ["img"],
  impactSection: ["impactSection"],
  contactCard: ["contactCard"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  page: typeof Page;
  landing: typeof Landing;
  startedButton: typeof StartedButton;
  columns: "div";
  img: "img";
  impactSection: typeof ImpactSection;
  contactCard: typeof ContactCard;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBusinessPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBusinessPage__VariantsArgs;
    args?: PlasmicBusinessPage__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicBusinessPage__Fetches;
  } & Omit<PlasmicBusinessPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicBusinessPage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicBusinessPage__ArgProps,
      internalVariantPropNames: PlasmicBusinessPage__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicBusinessPage__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBusinessPage";
  } else {
    func.displayName = `PlasmicBusinessPage.${nodeName}`;
  }
  return func;
}

export const PlasmicBusinessPage = Object.assign(
  // Top-level PlasmicBusinessPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    page: makeNodeComponent("page"),
    landing: makeNodeComponent("landing"),
    startedButton: makeNodeComponent("startedButton"),
    columns: makeNodeComponent("columns"),
    img: makeNodeComponent("img"),
    impactSection: makeNodeComponent("impactSection"),
    contactCard: makeNodeComponent("contactCard"),

    // Metadata about props expected for PlasmicBusinessPage
    internalVariantProps: PlasmicBusinessPage__VariantProps,
    internalArgProps: PlasmicBusinessPage__ArgProps
  }
);

export default PlasmicBusinessPage;
/* prettier-ignore-end */
